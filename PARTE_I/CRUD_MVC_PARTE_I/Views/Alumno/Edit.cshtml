@model CRUD_MVC_PARTE_I.Models.Alumno

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_bootstrap3.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Alumno</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <div class="form-group">
        @Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombres, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Apellidos, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Apellidos, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Edad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Edad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control" id="Sexo" name="Sexo">
                <option value="F" @(Model.Sexo == "F" ? "selected" : "" )>Femenino</option>
                <option value="M" @(Model.Sexo == "M" ? "selected" : "" )>Masculino</option>
                <option value="L" @(Model.Sexo == "L" ? "selected" : "" )>Lesbiana</option>
                <option value="G" @(Model.Sexo == "G" ? "selected" : "" )>Gay</option>
                <option value="B" @(Model.Sexo == "B" ? "selected" : "" )>Bisexual</option>
                <option value="T" @(Model.Sexo == "T" ? "selected" : "" )>Transexual</option>
            </select>
            @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
        </div>
    </div>

    @* que no se pueda modificar fecha de registro *@
    <div class="form-group">
        @Html.LabelFor(model => model.FechaRegistro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.EditorFor(model => model.FechaRegistro, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.FechaRegistro, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CodCiudad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* El tercer parametro enviado es el codigo de la ciudad del alumno, se envia 
                al controlador Alumno, a la accion ListaCiudades.*@
            @Html.Action("ListaCiudades", "Alumno",new { SelectedCity = Model.CodCiudad })
            @Html.ValidationMessageFor(model => model.Ciudad, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}
<div>
    @Html.ActionLink("Regresar", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}